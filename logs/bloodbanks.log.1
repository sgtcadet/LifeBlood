DEBUG - Static select for entity domain.Phone [PESSIMISTIC_WRITE]: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2374d36a]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_3_0_}

DEBUG - Static select for entity domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1506f20f]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_3_0_}

DEBUG - Static select for entity domain.Phone [OPTIMISTIC]: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@424fd310]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_3_0_}

DEBUG - Static select for entity domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Phone: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Phone: select phone0_.trn as trn1_3_0_, phone0_.phone_number_1 as phone_nu2_3_0_, phone0_.phone_number_2 as phone_nu3_3_0_ from donor_phone phone0_ where phone0_.trn=?
DEBUG - Static SQL for entity: domain.Donor
DEBUG -  Version select: select trn from donor where trn =?
DEBUG -  Snapshot select: select donor_.trn, donor_.address as address2_4_, donor_.dob as dob3_4_, donor_.email as email4_4_, donor_.firstname as firstnam5_4_, donor_.gender as gender6_4_, donor_.lastname as lastname7_4_, donor_.phone as phone8_4_, donor_.blood_type as blood_ty1_2_ from donor donor_ where donor_.trn=?
DEBUG -  Insert 0: insert into donor (address, dob, email, firstname, gender, lastname, phone, blood_type, trn) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG -  Update 0: update donor set address=?, dob=?, email=?, firstname=?, gender=?, lastname=?, phone=?, blood_type=? where trn=?
DEBUG -  Delete 0: delete from donor where trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ac5227]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [NONE]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6e28bc]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [READ]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e4bb20]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463b4ac8]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE_NOWAIT]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f68dff]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE_SKIPLOCKED]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0d6318]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [FORCE]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4409e975]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_READ]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7686a7]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_WRITE]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec3394b]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_FORCE_INCREMENT]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1522d8a0]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [OPTIMISTIC]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5644dc81]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Donor [OPTIMISTIC_FORCE_INCREMENT]: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Donor: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Donor: select donor0_.trn as trn1_4_0_, donor0_.address as address2_4_0_, donor0_.dob as dob3_4_0_, donor0_.email as email4_4_0_, donor0_.firstname as firstnam5_4_0_, donor0_.gender as gender6_4_0_, donor0_.lastname as lastname7_4_0_, donor0_.phone as phone8_4_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Static SQL for entity: domain.BloodBankAddress
DEBUG -  Version select: select address_id from blood_bank_address where address_id =?
DEBUG -  Snapshot select: select bloodbanka_.address_id, bloodbanka_.address_line_1 as address_2_1_, bloodbanka_.address_line_2 as address_3_1_, bloodbanka_.street as street4_1_ from blood_bank_address bloodbanka_ where bloodbanka_.address_id=?
DEBUG -  Insert 0: insert into blood_bank_address (address_line_1, address_line_2, street, address_id) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank_address set address_line_1=?, address_line_2=?, street=? where address_id=?
DEBUG -  Delete 0: delete from blood_bank_address where address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278bb07e]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [NONE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3381b4fc]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11981797]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625abb97]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_NOWAIT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aeab9a1]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_SKIPLOCKED]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@774698ab]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [FORCE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4ca3f6]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31aa3ca5]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_WRITE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2c13a8]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b44435b]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b7550d]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static SQL for entity: domain.BloodBank
DEBUG -  Version select: select idblood_bank from blood_bank where idblood_bank =?
DEBUG -  Snapshot select: select bloodbank_.idblood_bank, bloodbank_.address_id as address_4_0_, bloodbank_.name as name2_0_, bloodbank_.phone as phone3_0_ from blood_bank bloodbank_ where bloodbank_.idblood_bank=?
DEBUG -  Insert 0: insert into blood_bank (address_id, name, phone, idblood_bank) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank set address_id=?, name=?, phone=? where idblood_bank=?
DEBUG -  Delete 0: delete from blood_bank where idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c541c15]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d2a4eed]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [NONE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1021f6c9]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488eb7f2]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4189d70b]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e7634b9]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0b0a5e]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@320de594]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_NOWAIT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd1dc90]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478ee483]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_SKIPLOCKED]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7288a3]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fe0499]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [FORCE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@686449f9]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b6f0d6]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4044fb95]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f48b4]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_WRITE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c00384f]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb564e2]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e6b5c8]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8233cd]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b20ca2b]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aecbb8d]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static SQL for entity: domain.Person
DEBUG -  Version select: select trn from Person where trn =?
DEBUG -  Snapshot select: select person_.trn, person_.address as address2_4_, person_.dob as dob3_4_, person_.email as email4_4_, person_.firstname as firstnam5_4_, person_.gender as gender6_4_, person_.lastname as lastname7_4_, person_.phone as phone8_4_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person_ where person_.trn=?
DEBUG -  Insert 0: insert into Person (address, dob, email, firstname, gender, lastname, phone, trn) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG -  Update 0: update Person set address=?, dob=?, email=?, firstname=?, gender=?, lastname=?, phone=? where trn=?
DEBUG -  Delete 0: delete from Person where trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8d39c4]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [NONE]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72758afa]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [READ]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c398c80]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [UPGRADE]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21baa903]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [UPGRADE_NOWAIT]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a2630a]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [UPGRADE_SKIPLOCKED]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd91bca]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [FORCE]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3382f8ae]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_READ]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f65e45]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_WRITE]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a891c97]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [OPTIMISTIC]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7756c3cd]
DEBUG - Visiting attribute path : address
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_4_0_}

DEBUG - Static select for entity domain.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Person: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Person: select person0_.trn as trn1_4_0_, person0_.address as address2_4_0_, person0_.dob as dob3_4_0_, person0_.email as email4_4_0_, person0_.firstname as firstnam5_4_0_, person0_.gender as gender6_4_0_, person0_.lastname as lastname7_4_0_, person0_.phone as phone8_4_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, address, dob, email, firstname, gender, lastname, phone, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
INFO - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@76f7d241] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG - No alter strings for table : blood_bank
DEBUG - No alter strings for table : blood_bank_address
DEBUG - alter table lbds.donor add column address tinyblob
DEBUG - alter table lbds.donor add column phone tinyblob
DEBUG - No alter strings for table : donor_phone
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b080f3a
DEBUG - Registering SessionFactory: 50a22345-e7d9-496e-81ca-61a3a12eb8de (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG - Statistics initialized [enabled=false]
DEBUG - SELECT Count(*) AS Duplicates FROM blood_bank WHERE idblood_bank = '123'
DEBUG - Result set row: 0
DEBUG - Result row: 
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - begin
DEBUG - Generated identifier: 123, using strategy: org.hibernate.id.Assigned
DEBUG - select bloodbanka_.address_id, bloodbanka_.address_line_1 as address_2_1_, bloodbanka_.address_line_2 as address_3_1_, bloodbanka_.street as street4_1_ from blood_bank_address bloodbanka_ where bloodbanka_.address_id=?
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - Generated identifier: 9, using strategy: org.hibernate.id.Assigned
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 2 insertions, 0 updates, 0 deletions to 2 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - domain.BloodBankAddress{street=Blood Bank Street, addressLine1=Address Line 1, addressLine2=Address Line 2, addressId=9}
DEBUG - domain.BloodBank{number=1234567, bloodBankAddress=domain.BloodBankAddress#9, name=Blood Bank Name, id=123}
DEBUG - insert into blood_bank_address (address_line_1, address_line_2, street, address_id) values (?, ?, ?, ?)
DEBUG - insert into blood_bank (address_id, name, phone, idblood_bank) values (?, ?, ?, ?)
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - begin
DEBUG - select bloodbanka_.address_id, bloodbanka_.address_line_1 as address_2_1_, bloodbanka_.address_line_2 as address_3_1_, bloodbanka_.street as street4_1_ from blood_bank_address bloodbanka_ where bloodbanka_.address_id=?
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - domain.BloodBank{number=789456123, bloodBankAddress=domain.BloodBankAddress#9, name=Blood Bank Updated Name, id=123}
DEBUG - domain.BloodBankAddress{street=Blood Bank Updated Street, addressLine1=Address Updated Line 1, addressLine2=Address Updated Line 2, addressId=9}
DEBUG - update blood_bank set address_id=?, name=?, phone=? where idblood_bank=?
DEBUG - update blood_bank_address set address_line_1=?, address_line_2=?, street=? where address_id=?
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - SELECT * FROM blood_bank
DEBUG - Result set row: 0
DEBUG - Result row: EntityKey[domain.BloodBank#123]
DEBUG - Result set row: 1
DEBUG - Result row: EntityKey[domain.BloodBank#KPH8]
DEBUG - Resolving associations for [domain.BloodBank#123]
DEBUG - select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Starting ResultSet row #0
DEBUG - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG - Resolving associations for [domain.BloodBankAddress#9]
DEBUG - Done materializing entity [domain.BloodBankAddress#9]
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - Done entity load : domain.BloodBankAddress#9
DEBUG - Done materializing entity [domain.BloodBank#123]
DEBUG - Resolving associations for [domain.BloodBank#KPH8]
DEBUG - select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Starting ResultSet row #0
DEBUG - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
DEBUG - Resolving associations for [domain.BloodBankAddress#1]
DEBUG - Done materializing entity [domain.BloodBankAddress#1]
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - Done entity load : domain.BloodBankAddress#1
DEBUG - Done materializing entity [domain.BloodBank#KPH8]
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - SELECT Count(*) AS Duplicates FROM blood_bank WHERE idblood_bank = '123'
DEBUG - Result set row: 0
DEBUG - Result row: 
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - begin
DEBUG - select bloodbank_.idblood_bank, bloodbank_.address_id as address_4_0_, bloodbank_.name as name2_0_, bloodbank_.phone as phone3_0_ from blood_bank bloodbank_ where bloodbank_.idblood_bank=?
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - committing
DEBUG - Processing flush-time cascades
DEBUG - Dirty checking collections
DEBUG - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG - Listing entities:
DEBUG - domain.BloodBank{number=null, bloodBankAddress=null, name=null, id=123}
DEBUG - delete from blood_bank where idblood_bank=?
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - HHH000420: Closing un-released batch
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@2145433b
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@2145433b
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2145433b
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ec300f1
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@25b485ba
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@214b199c
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25a65b77
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25a65b77
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25a65b77
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@2aece37d
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@2aece37d
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2aece37d
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@16aa0a0a
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@16aa0a0a
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16aa0a0a
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@17c1bced
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@17c1bced
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17c1bced
DEBUG - Adding type registration long -> org.hibernate.type.LongType@3ee0fea4
DEBUG - Adding type registration long -> org.hibernate.type.LongType@3ee0fea4
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ee0fea4
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@258e2e41
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@258e2e41
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@258e2e41
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@21507a04
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@21507a04
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21507a04
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2aa5fe93
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2aa5fe93
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b62fe6d
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b62fe6d
DEBUG - Adding type registration string -> org.hibernate.type.StringType@5db45159
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@5db45159
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@327b636c
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71c8becc
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@d83da2e
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d83da2e
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@78047b92
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@78047b92
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@5a955565
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5a955565
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@70be0a2b
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@70be0a2b
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d082e88
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d082e88
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43ee72e6
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43ee72e6
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2fd6b6c7
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2fd6b6c7
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@37918c79
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@37918c79
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45018215
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@45018215
DEBUG - Adding type registration date -> org.hibernate.type.DateType@29176cc1
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@29176cc1
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@124c278f
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@124c278f
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@6973bf95
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6973bf95
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6973bf95
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47542153
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@18ce0030
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18ce0030
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18ce0030
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@25d250c6
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@318ba8c8
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@318ba8c8
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@1a04f701
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a04f701
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@56de5251
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@56de5251
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@71b1176b
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71b1176b
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12e61fe6
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12e61fe6
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@48fa0f47
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@161479c6
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@161479c6
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@161479c6
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@778d1062
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@778d1062
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@778d1062
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@6e0dec4a
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@794cb805
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@3967e60c
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@3967e60c
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@3967e60c
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5cee5251
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5cee5251
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5cee5251
DEBUG - Adding type registration text -> org.hibernate.type.TextType@4ddced80
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@363ee3a2
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@6fe7aac8
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6fe7aac8
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@76908cc0
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@1622f1b
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1622f1b
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@9225652
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9225652
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6580cfdd
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9353778
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@31d7b7bf
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@3911c2a7
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3911c2a7
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76508ed1
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41e36e46
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15c43bd9
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d74bf60
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f209819
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15eb5ee5
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2145b572
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39529185
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Encountered a non-categorized annotated class [domain.PersonAddress]; ignoring
DEBUG - Binding entity from annotated class: domain.Person
DEBUG - Import with entity name Person
DEBUG - Bind entity domain.Person on table Person
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property trn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:trn]
DEBUG - building SimpleValue for trn
DEBUG - Building property trn
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property address with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:address]
DEBUG - building SimpleValue for address
DEBUG - Building property address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=dob, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property dob with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:dob]
DEBUG - building SimpleValue for dob
DEBUG - Building property dob
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property email with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:email]
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:firstname]
DEBUG - building SimpleValue for firstname
DEBUG - Building property firstname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=gender, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property gender with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:gender]
DEBUG - building SimpleValue for gender
DEBUG - Building property gender
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:lastname]
DEBUG - building SimpleValue for lastname
DEBUG - Building property lastname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:phone]
DEBUG - building SimpleValue for phone
DEBUG - Building property phone
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Donor
DEBUG - Import with entity name Donor
DEBUG - Bind entity domain.Donor on table donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(donor), mappingColumn=blood_type, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property bloodType with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:bloodType]
DEBUG - building SimpleValue for bloodType
DEBUG - Building property bloodType
DEBUG - Binding entity from annotated class: domain.Phone
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Phone
DEBUG - Bind entity domain.Phone on table donor_phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone1]
DEBUG - building SimpleValue for phone1
DEBUG - Building property phone1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone2]
DEBUG - building SimpleValue for phone2
DEBUG - Building property phone2
DEBUG - Starting fillSimpleValue for trn
DEBUG - Starting fillSimpleValue for address
DEBUG - Not known whether passed class name [domain.PersonAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.PersonAddress
DEBUG - Starting fillSimpleValue for dob
DEBUG - Starting fillSimpleValue for email
DEBUG - Starting fillSimpleValue for firstname
DEBUG - Starting fillSimpleValue for gender
DEBUG - Starting fillSimpleValue for lastname
DEBUG - Starting fillSimpleValue for phone
DEBUG - Not known whether passed class name [domain.Phone] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Phone
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for bloodType
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for phone1
DEBUG - Starting fillSimpleValue for phone2
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [person]
DEBUG - Forcing column [idblood_bank] to be non-null as it is part of the primary key for table [blood_bank]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [blood_bank_address]
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [donor_phone]
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): enabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: 2
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@518caac3
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: enabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): enabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: AFTER_TRANSACTION
DEBUG - Generate SQL with comments: disabled
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\mysql-connector-java-5.1.45\mysql-connector-java-5.1.45-bin.jar;C:\Program Files\NetBeans 8.2\ide\modules\ext\mysql-connector-java-5.1.23-bin.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\antlr-2.7.7.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\classmate-1.3.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\dom4j-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-core-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jandex-2.0.3.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\javassist-3.22.0-GA.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-logging-3.3.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\geolatte-geom-1.2.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\hibernate-spatial-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\jts-1.13.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\postgresql-42.1.4.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\slf4j-api-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\byte-buddy-1.6.14.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\hibernate-osgi-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\javax.interceptor-api-1.2.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.compendium-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.core-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\jpa-metamodel-generator\hibernate-jpamodelgen-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\envers;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\log4j-1.2.17.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\junit-4.12.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\hamcrest-core-1.3.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood\build\classes;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood\build\test\classes;C:\Program Files\NetBeans 8.2\extide\ant\lib\ant-launcher.jar;C:\Program Files\NetBeans 8.2\extide\ant\lib\ant.jar;C:\Program Files\NetBeans 8.2\extide\ant\lib\ant-junit.jar;C:\Program Files\NetBeans 8.2\extide\ant\lib\ant-junit4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, user.country=JM, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner services.Hibernate.BloodBankSvcHibernateImplTest skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=true formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,C:\Users\howar\AppData\Local\Temp\TEST-services.Hibernate.BloodBankSvcHibernateImplTest.xml crashfile=C:\Users\howar\AppData\Local\NetBeans\Cache\8.2\executor-snippets\junitvmwatcher4093946105526963970.properties propsfile=C:\Users\howar\AppData\Local\NetBeans\Cache\8.2\executor-snippets\junit7983088399249930740.properties, sun.cpu.endian=little, user.home=C:\Users\howar, user.language=en, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=howar, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull, connection.pool_size=1, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\howar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@51fadaff, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\nodejs\;C:\Users\howar\Anaconda3;C:\Users\howar\Anaconda3\Library\mingw-w64\bin;C:\Users\howar\Anaconda3\Library\usr\bin;C:\Users\howar\Anaconda3\Library\bin;C:\Users\howar\Anaconda3\Scripts;C:\Users\howar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;C:\Users\howar\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\Nmap;C:\Users\howar\AppData\Roaming\npm;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
