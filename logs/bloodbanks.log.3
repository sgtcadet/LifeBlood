DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [OPTIMISTIC]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c5529ab]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [OPTIMISTIC_FORCE_INCREMENT]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Static select for action ACTION_MERGE on entity domain.PersonAddress: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.PersonAddress: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Static SQL for entity: domain.Donor
DEBUG -  Version select: select trn from donor where trn =?
DEBUG -  Snapshot select: select donor_.trn, donor_.dob as dob2_5_, donor_.email as email3_5_, donor_.firstname as firstnam4_5_, donor_.gender as gender5_5_, donor_.lastname as lastname6_5_, donor_.blood_type as blood_ty1_2_ from donor donor_ where donor_.trn=?
DEBUG -  Insert 0: insert into donor (dob, email, firstname, gender, lastname, blood_type, trn) values (?, ?, ?, ?, ?, ?, ?)
DEBUG -  Update 0: update donor set dob=?, email=?, firstname=?, gender=?, lastname=?, blood_type=? where trn=?
DEBUG -  Delete 0: delete from donor where trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6722d3]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af0df05]
DEBUG - Visiting attribute path : phone.phone1
DEBUG - Visiting attribute path : phone.phone2
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35a9782c]
DEBUG - Visiting attribute path : address.addressLine1
DEBUG - Visiting attribute path : address.addressLine2
DEBUG - Visiting attribute path : address.street
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}
          - JOIN (JoinDefinedByMetadata(phone)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.Phone)
                - SQL table alias mapping - phone1_
                - alias suffix - 1_
                - suffixed key columns - {trn1_4_1_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=domain.PersonAddress)
                - SQL table alias mapping - personaddr2_
                - alias suffix - 2_
                - suffixed key columns - {addressI1_3_2_}

DEBUG - Static select for entity domain.Donor [NONE]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_, phone1_.trn as trn1_4_1_, phone1_.phone_number_1 as phone_nu2_4_1_, phone1_.phone_number_2 as phone_nu3_4_1_, personaddr2_.addressId as addressI1_3_2_, personaddr2_.address_line_1 as address_2_3_2_, personaddr2_.address_line_2 as address_3_3_2_, personaddr2_.street as street4_3_2_ from donor donor0_ left outer join donor_phone phone1_ on donor0_.trn=phone1_.trn left outer join donor_address personaddr2_ on donor0_.trn=personaddr2_.addressId where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299321e2]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64ba3208]
DEBUG - Visiting attribute path : phone.phone1
DEBUG - Visiting attribute path : phone.phone2
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a6944c]
DEBUG - Visiting attribute path : address.addressLine1
DEBUG - Visiting attribute path : address.addressLine2
DEBUG - Visiting attribute path : address.street
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}
          - JOIN (JoinDefinedByMetadata(phone)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.Phone)
                - SQL table alias mapping - phone1_
                - alias suffix - 1_
                - suffixed key columns - {trn1_4_1_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=domain.PersonAddress)
                - SQL table alias mapping - personaddr2_
                - alias suffix - 2_
                - suffixed key columns - {addressI1_3_2_}

DEBUG - Static select for entity domain.Donor [READ]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_, phone1_.trn as trn1_4_1_, phone1_.phone_number_1 as phone_nu2_4_1_, phone1_.phone_number_2 as phone_nu3_4_1_, personaddr2_.addressId as addressI1_3_2_, personaddr2_.address_line_1 as address_2_3_2_, personaddr2_.address_line_2 as address_3_3_2_, personaddr2_.street as street4_3_2_ from donor donor0_ left outer join donor_phone phone1_ on donor0_.trn=phone1_.trn left outer join donor_address personaddr2_ on donor0_.trn=personaddr2_.addressId where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b00f608]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e821657]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d131e1b]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71cf1b07]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fce136b]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa83f4f]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE_NOWAIT]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b6123e]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19648c40]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bd8a64]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [UPGRADE_SKIPLOCKED]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e94def]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ebb6851]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ab2d48]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [FORCE]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b068087]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a393455]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_READ]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cbc3762]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49872d67]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56303b57]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_WRITE]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2a01d4]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f5c518]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f48b3d2]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [PESSIMISTIC_FORCE_INCREMENT]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4983159f]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [OPTIMISTIC]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2bd371]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Donor)
    - Returns
       - EntityReturnImpl(entity=domain.Donor, querySpaceUid=<gen:0>, path=domain.Donor)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Donor.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Donor.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Donor)
          - SQL table alias mapping - donor0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Donor [OPTIMISTIC_FORCE_INCREMENT]: select donor0_.trn as trn1_5_0_, donor0_.dob as dob2_5_0_, donor0_.email as email3_5_0_, donor0_.firstname as firstnam4_5_0_, donor0_.gender as gender5_5_0_, donor0_.lastname as lastname6_5_0_, donor0_.blood_type as blood_ty1_2_0_ from donor donor0_ where donor0_.trn=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Donor: select donor0_.trn as trn1_5_2_, donor0_.dob as dob2_5_2_, donor0_.email as email3_5_2_, donor0_.firstname as firstnam4_5_2_, donor0_.gender as gender5_5_2_, donor0_.lastname as lastname6_5_2_, donor0_.blood_type as blood_ty1_2_2_, phone1_.trn as trn1_4_0_, phone1_.phone_number_1 as phone_nu2_4_0_, phone1_.phone_number_2 as phone_nu3_4_0_, personaddr2_.addressId as addressI1_3_1_, personaddr2_.address_line_1 as address_2_3_1_, personaddr2_.address_line_2 as address_3_3_1_, personaddr2_.street as street4_3_1_ from donor donor0_ left outer join donor_phone phone1_ on donor0_.trn=phone1_.trn left outer join donor_address personaddr2_ on donor0_.trn=personaddr2_.addressId where donor0_.trn=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Donor: select donor0_.trn as trn1_5_2_, donor0_.dob as dob2_5_2_, donor0_.email as email3_5_2_, donor0_.firstname as firstnam4_5_2_, donor0_.gender as gender5_5_2_, donor0_.lastname as lastname6_5_2_, donor0_.blood_type as blood_ty1_2_2_, phone1_.trn as trn1_4_0_, phone1_.phone_number_1 as phone_nu2_4_0_, phone1_.phone_number_2 as phone_nu3_4_0_, personaddr2_.addressId as addressI1_3_1_, personaddr2_.address_line_1 as address_2_3_1_, personaddr2_.address_line_2 as address_3_3_1_, personaddr2_.street as street4_3_1_ from donor donor0_ left outer join donor_phone phone1_ on donor0_.trn=phone1_.trn left outer join donor_address personaddr2_ on donor0_.trn=personaddr2_.addressId where donor0_.trn=?
DEBUG - Static SQL for entity: domain.BloodBankAddress
DEBUG -  Version select: select address_id from blood_bank_address where address_id =?
DEBUG -  Snapshot select: select bloodbanka_.address_id, bloodbanka_.address_line_1 as address_2_1_, bloodbanka_.address_line_2 as address_3_1_, bloodbanka_.street as street4_1_ from blood_bank_address bloodbanka_ where bloodbanka_.address_id=?
DEBUG -  Insert 0: insert into blood_bank_address (address_line_1, address_line_2, street, address_id) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank_address set address_line_1=?, address_line_2=?, street=? where address_id=?
DEBUG -  Delete 0: delete from blood_bank_address where address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [NONE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_NOWAIT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_SKIPLOCKED]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [FORCE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a560583]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_WRITE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37efd131]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static SQL for entity: domain.BloodBank
DEBUG -  Version select: select idblood_bank from blood_bank where idblood_bank =?
DEBUG -  Snapshot select: select bloodbank_.idblood_bank, bloodbank_.address_id as address_4_0_, bloodbank_.name as name2_0_, bloodbank_.phone as phone3_0_ from blood_bank bloodbank_ where bloodbank_.idblood_bank=?
DEBUG -  Insert 0: insert into blood_bank (address_id, name, phone, idblood_bank) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank set address_id=?, name=?, phone=? where idblood_bank=?
DEBUG -  Delete 0: delete from blood_bank where idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd6d4b7]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [NONE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7966baa7]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d36e77e]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0c9195]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_NOWAIT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366c4480]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_SKIPLOCKED]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdd09b1]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8dcdaa]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [FORCE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf8b2dc]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5829e4f4]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_WRITE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c35172e]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc41abc]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4566d049]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3668d4]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static SQL for entity: domain.Person
DEBUG -  Version select: select trn from Person where trn =?
DEBUG -  Snapshot select: select person_.trn, person_.dob as dob2_5_, person_.email as email3_5_, person_.firstname as firstnam4_5_, person_.gender as gender5_5_, person_.lastname as lastname6_5_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person_ where person_.trn=?
DEBUG -  Insert 0: insert into Person (dob, email, firstname, gender, lastname, trn) values (?, ?, ?, ?, ?, ?)
DEBUG -  Update 0: update Person set dob=?, email=?, firstname=?, gender=?, lastname=? where trn=?
DEBUG -  Delete 0: delete from Person where trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c3b9394]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f6f61c8]
DEBUG - Visiting attribute path : phone.phone1
DEBUG - Visiting attribute path : phone.phone2
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccb4b1b]
DEBUG - Visiting attribute path : address.addressLine1
DEBUG - Visiting attribute path : address.addressLine2
DEBUG - Visiting attribute path : address.street
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}
          - JOIN (JoinDefinedByMetadata(phone)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.Phone)
                - SQL table alias mapping - phone1_
                - alias suffix - 1_
                - suffixed key columns - {trn1_4_1_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=domain.PersonAddress)
                - SQL table alias mapping - personaddr2_
                - alias suffix - 2_
                - suffixed key columns - {addressI1_3_2_}

DEBUG - Static select for entity domain.Person [NONE]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_, phone1_.trn as trn1_4_1_, phone1_.phone_number_1 as phone_nu2_4_1_, phone1_.phone_number_2 as phone_nu3_4_1_, personaddr2_.addressId as addressI1_3_2_, personaddr2_.address_line_1 as address_2_3_2_, personaddr2_.address_line_2 as address_3_3_2_, personaddr2_.street as street4_3_2_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ left outer join donor_phone phone1_ on person0_.trn=phone1_.trn left outer join donor_address personaddr2_ on person0_.trn=personaddr2_.addressId where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec2cc4]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c1e2a2d]
DEBUG - Visiting attribute path : phone.phone1
DEBUG - Visiting attribute path : phone.phone2
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d645b1]
DEBUG - Visiting attribute path : address.addressLine1
DEBUG - Visiting attribute path : address.addressLine2
DEBUG - Visiting attribute path : address.street
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}
          - JOIN (JoinDefinedByMetadata(phone)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.Phone)
                - SQL table alias mapping - phone1_
                - alias suffix - 1_
                - suffixed key columns - {trn1_4_1_}
          - JOIN (JoinDefinedByMetadata(address)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=domain.PersonAddress)
                - SQL table alias mapping - personaddr2_
                - alias suffix - 2_
                - suffixed key columns - {addressI1_3_2_}

DEBUG - Static select for entity domain.Person [READ]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_, phone1_.trn as trn1_4_1_, phone1_.phone_number_1 as phone_nu2_4_1_, phone1_.phone_number_2 as phone_nu3_4_1_, personaddr2_.addressId as addressI1_3_2_, personaddr2_.address_line_1 as address_2_3_2_, personaddr2_.address_line_2 as address_3_3_2_, personaddr2_.street as street4_3_2_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ left outer join donor_phone phone1_ on person0_.trn=phone1_.trn left outer join donor_address personaddr2_ on person0_.trn=personaddr2_.addressId where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc3ad05]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119020fb]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9f6567]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [UPGRADE]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c055c54]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e5d0e5]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73173f63]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [UPGRADE_NOWAIT]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55562aa9]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e276594]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3401a114]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [UPGRADE_SKIPLOCKED]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5066d65f]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d2e85]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ecd267f]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [FORCE]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ffcbd7]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb2d00b]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9bfddc]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_READ]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a9c38eb]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c5474f5]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f4205be]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_WRITE]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e22bdd]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@544820b7]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b98a075]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e61d218]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b12f8a]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e84a8e1]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [OPTIMISTIC]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e554a3b]
DEBUG - Visiting attribute path : dob
DEBUG - Visiting attribute path : email
DEBUG - Visiting attribute path : firstname
DEBUG - Visiting attribute path : gender
DEBUG - Visiting attribute path : lastname
DEBUG - Visiting attribute path : phone
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d42c224]
DEBUG - Visiting attribute path : address
DEBUG - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56aaaecd]
DEBUG - Visiting attribute path : bloodType
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Person)
    - Returns
       - EntityReturnImpl(entity=domain.Person, querySpaceUid=<gen:0>, path=domain.Person)
          - EntityAttributeFetchImpl(entity=domain.Phone, querySpaceUid=<gen:1>, path=domain.Person.phone)
          - EntityAttributeFetchImpl(entity=domain.PersonAddress, querySpaceUid=<gen:2>, path=domain.Person.address)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {trn1_5_0_}

DEBUG - Static select for entity domain.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.trn as trn1_5_0_, person0_.dob as dob2_5_0_, person0_.email as email3_5_0_, person0_.firstname as firstnam4_5_0_, person0_.gender as gender5_5_0_, person0_.lastname as lastname6_5_0_, person0_.blood_type as blood_ty1_2_0_, person0_.clazz_ as clazz_0_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ where person0_.trn=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Person: select person0_.trn as trn1_5_2_, person0_.dob as dob2_5_2_, person0_.email as email3_5_2_, person0_.firstname as firstnam4_5_2_, person0_.gender as gender5_5_2_, person0_.lastname as lastname6_5_2_, person0_.blood_type as blood_ty1_2_2_, person0_.clazz_ as clazz_2_, phone1_.trn as trn1_4_0_, phone1_.phone_number_1 as phone_nu2_4_0_, phone1_.phone_number_2 as phone_nu3_4_0_, personaddr2_.addressId as addressI1_3_1_, personaddr2_.address_line_1 as address_2_3_1_, personaddr2_.address_line_2 as address_3_3_1_, personaddr2_.street as street4_3_1_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ left outer join donor_phone phone1_ on person0_.trn=phone1_.trn left outer join donor_address personaddr2_ on person0_.trn=personaddr2_.addressId where person0_.trn=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Person: select person0_.trn as trn1_5_2_, person0_.dob as dob2_5_2_, person0_.email as email3_5_2_, person0_.firstname as firstnam4_5_2_, person0_.gender as gender5_5_2_, person0_.lastname as lastname6_5_2_, person0_.blood_type as blood_ty1_2_2_, person0_.clazz_ as clazz_2_, phone1_.trn as trn1_4_0_, phone1_.phone_number_1 as phone_nu2_4_0_, phone1_.phone_number_2 as phone_nu3_4_0_, personaddr2_.addressId as addressI1_3_1_, personaddr2_.address_line_1 as address_2_3_1_, personaddr2_.address_line_2 as address_3_3_1_, personaddr2_.street as street4_3_1_ from ( select trn, dob, email, firstname, gender, lastname, blood_type, 1 as clazz_ from donor ) person0_ left outer join donor_phone phone1_ on person0_.trn=phone1_.trn left outer join donor_address personaddr2_ on person0_.trn=personaddr2_.addressId where person0_.trn=?
INFO - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@a5bd950] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG - No alter strings for table : blood_bank
DEBUG - No alter strings for table : blood_bank_address
DEBUG - No alter strings for table : donor
DEBUG - No alter strings for table : donor_address
DEBUG - No alter strings for table : donor_phone
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60d1a32f
DEBUG - Registering SessionFactory: ccc5f59c-7cba-463f-82da-caf43836053b (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG - Statistics initialized [enabled=false]
DEBUG - SELECT Count(*) AS Duplicates FROM donor WHERE trn = '147-7852-852'
DEBUG - Result set row: 0
DEBUG - Result row: 
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - begin
DEBUG - Generated identifier: 147-7852-852, using strategy: org.hibernate.id.Assigned
DEBUG - select phone_.trn, phone_.phone_number_1 as phone_nu2_4_, phone_.phone_number_2 as phone_nu3_4_ from donor_phone phone_ where phone_.trn=?
DEBUG - HHH000387: ResultSet's statement was not registered
DEBUG - Generated identifier: 0, using strategy: org.hibernate.id.Assigned
DEBUG - rolling back
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Connection pool now considered primed; min-size will be maintained
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@289d1c02
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a74868d
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@365185bd
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration string -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68ceda24
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@587c290d
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2bbaf4f0
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4148db48
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b67034
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@6385cb26
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@1e9e725a
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration text -> org.hibernate.type.TextType@58fdd99
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@7364985f
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dd92fe2
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@400cff1a
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75f9eccc
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@4ae3c1cd
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d68ef40
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b0abc94
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75c072cb
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f1c7bf6
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25b485ba
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.Person
DEBUG - Import with entity name Person
DEBUG - Bind entity domain.Person on table Person
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property trn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:trn]
DEBUG - building SimpleValue for trn
DEBUG - Building property trn
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=dob, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property dob with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:dob]
DEBUG - building SimpleValue for dob
DEBUG - Building property dob
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property email with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:email]
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:firstname]
DEBUG - building SimpleValue for firstname
DEBUG - Building property firstname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=gender, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property gender with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:gender]
DEBUG - building SimpleValue for gender
DEBUG - Building property gender
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:lastname]
DEBUG - building SimpleValue for lastname
DEBUG - Building property lastname
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Donor
DEBUG - Import with entity name Donor
DEBUG - Bind entity domain.Donor on table donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(donor), mappingColumn=blood_type, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property bloodType with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:bloodType]
DEBUG - building SimpleValue for bloodType
DEBUG - Building property bloodType
DEBUG - Binding entity from annotated class: domain.PersonAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name PersonAddress
DEBUG - Bind entity domain.PersonAddress on table donor_address
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Phone
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Phone
DEBUG - Bind entity domain.Phone on table donor_phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone1]
DEBUG - building SimpleValue for phone1
DEBUG - Building property phone1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone2]
DEBUG - building SimpleValue for phone2
DEBUG - Building property phone2
DEBUG - Starting fillSimpleValue for trn
DEBUG - Starting fillSimpleValue for dob
DEBUG - Starting fillSimpleValue for email
DEBUG - Starting fillSimpleValue for firstname
DEBUG - Starting fillSimpleValue for gender
DEBUG - Starting fillSimpleValue for lastname
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for bloodType
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for phone1
DEBUG - Starting fillSimpleValue for phone2
DEBUG - Connection pool now considered primed; min-size will be maintained
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@289d1c02
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a74868d
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@365185bd
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration string -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68ceda24
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@587c290d
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2bbaf4f0
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4148db48
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b67034
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@6385cb26
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@1e9e725a
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration text -> org.hibernate.type.TextType@58fdd99
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@7364985f
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dd92fe2
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@400cff1a
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75f9eccc
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@4ae3c1cd
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d68ef40
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b0abc94
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75c072cb
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f1c7bf6
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25b485ba
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.Person
DEBUG - Import with entity name Person
DEBUG - Bind entity domain.Person on table Person
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property trn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:trn]
DEBUG - building SimpleValue for trn
DEBUG - Building property trn
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG - Building property address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=dob, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property dob with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:dob]
DEBUG - building SimpleValue for dob
DEBUG - Building property dob
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property email with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:email]
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:firstname]
DEBUG - building SimpleValue for firstname
DEBUG - Building property firstname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=gender, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property gender with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:gender]
DEBUG - building SimpleValue for gender
DEBUG - Building property gender
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:lastname]
DEBUG - building SimpleValue for lastname
DEBUG - Building property lastname
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - Building property phone
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Donor
DEBUG - Import with entity name Donor
DEBUG - Bind entity domain.Donor on table donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(donor), mappingColumn=blood_type, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property bloodType with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:bloodType]
DEBUG - building SimpleValue for bloodType
DEBUG - Building property bloodType
DEBUG - Binding entity from annotated class: domain.PersonAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name PersonAddress
DEBUG - Bind entity domain.PersonAddress on table donor_address
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Phone
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Phone
DEBUG - Bind entity domain.Phone on table donor_phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone1]
DEBUG - building SimpleValue for phone1
DEBUG - Building property phone1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone2]
DEBUG - building SimpleValue for phone2
DEBUG - Building property phone2
DEBUG - Starting fillSimpleValue for trn
DEBUG - Starting fillSimpleValue for dob
DEBUG - Starting fillSimpleValue for email
DEBUG - Starting fillSimpleValue for firstname
DEBUG - Starting fillSimpleValue for gender
DEBUG - Starting fillSimpleValue for lastname
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for bloodType
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for phone1
DEBUG - Starting fillSimpleValue for phone2
DEBUG - Connection pool now considered primed; min-size will be maintained
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43738a82
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@289d1c02
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a74868d
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@365185bd
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25bbf683
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@150c158
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@eb21112
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10a035a0
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@710726a3
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c762604
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@376b4233
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b3d7190
DEBUG - Adding type registration string -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dde5c8c
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68ceda24
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@587c290d
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1da51a35
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@768b970c
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f71c76a
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4b9e255
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e955596
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71d15f18
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2bea5ab4
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@f4168b8
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32464a14
DEBUG - Adding type registration date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc7b4de
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45afc369
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@17776a8
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2bbaf4f0
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33cb5951
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4148db48
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e25a92e
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1dd02175
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1176dcec
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a79c292
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12405818
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b67034
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@6166e06f
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@641147d0
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@6385cb26
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@1e9e725a
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@646be2c3
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62bd765
DEBUG - Adding type registration text -> org.hibernate.type.TextType@58fdd99
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@7364985f
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@226a82c4
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dd92fe2
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61009542
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ee12bac
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@400cff1a
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@75f9eccc
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@4ae3c1cd
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40e6dfe1
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d68ef40
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b0abc94
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75c072cb
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1f1c7bf6
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25b485ba
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.Person
DEBUG - Import with entity name Person
DEBUG - Bind entity domain.Person on table Person
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property trn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:trn]
DEBUG - building SimpleValue for trn
DEBUG - Building property trn
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG - Building property address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=dob, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property dob with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:dob]
DEBUG - building SimpleValue for dob
DEBUG - Building property dob
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property email with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:email]
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:firstname]
DEBUG - building SimpleValue for firstname
DEBUG - Building property firstname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=gender, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property gender with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:gender]
DEBUG - building SimpleValue for gender
DEBUG - Building property gender
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Person:lastname]
DEBUG - building SimpleValue for lastname
DEBUG - Building property lastname
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Person), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - Building property phone
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Donor
DEBUG - Import with entity name Donor
DEBUG - Bind entity domain.Donor on table donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(donor), mappingColumn=blood_type, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property bloodType with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:bloodType]
DEBUG - building SimpleValue for bloodType
DEBUG - Building property bloodType
DEBUG - Binding entity from annotated class: domain.PersonAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name PersonAddress
DEBUG - Bind entity domain.PersonAddress on table donor_address
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=donor, insertable=true, updatable=true, unique=false}
DEBUG - Building property donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding entity from annotated class: domain.Phone
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Phone
DEBUG - Bind entity domain.Phone on table donor_phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone1]
DEBUG - building SimpleValue for phone1
DEBUG - Building property phone1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone2]
DEBUG - building SimpleValue for phone2
DEBUG - Building property phone2
DEBUG - Starting fillSimpleValue for trn
DEBUG - Starting fillSimpleValue for dob
DEBUG - Starting fillSimpleValue for email
DEBUG - Starting fillSimpleValue for firstname
DEBUG - Starting fillSimpleValue for gender
DEBUG - Starting fillSimpleValue for lastname
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for bloodType
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for phone1
DEBUG - Starting fillSimpleValue for phone2
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [person]
DEBUG - Forcing column [idblood_bank] to be non-null as it is part of the primary key for table [blood_bank]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [blood_bank_address]
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [donor_address]
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [donor_phone]
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.PersonAddress
DEBUG - Connection pool now considered primed; min-size will be maintained
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
