DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a1e4ca]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c5dc4a2]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_WRITE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a194c39]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340b9973]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56113384]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@373ebf74]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f9678e1]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@189aa67a]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
INFO - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@235a0c16] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
DEBUG - No alter strings for table : blood_bank
DEBUG - No alter strings for table : blood_bank_address
DEBUG - Checking 0 named HQL queries
DEBUG - Checking 0 named SQL queries
DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@42f33b5d
DEBUG - Registering SessionFactory: a5af0f6a-69da-4755-922c-4376c2f57d37 (<unnamed>)
DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG - Statistics initialized [enabled=false]
DEBUG - SELECT Count(*) AS Duplicates FROM hospital WHERE idhospital = 'PM08'
DEBUG - Result set row: 0
DEBUG - Result row: 
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - begin
DEBUG - rolling back
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Initiating JDBC connection release from afterTransaction
DEBUG - Connection pool now considered primed; min-size will be maintained
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@13eb8acf
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@13eb8acf
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13eb8acf
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1fc2b765
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@78ac1102
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@a74868d
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@782663d3
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@782663d3
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@782663d3
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@7276c8cd
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@7276c8cd
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7276c8cd
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1786f9d5
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@3578436e
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@3578436e
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3578436e
DEBUG - Adding type registration long -> org.hibernate.type.LongType@4d1b0d2a
DEBUG - Adding type registration long -> org.hibernate.type.LongType@4d1b0d2a
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d1b0d2a
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4cf4d528
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@4cf4d528
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4cf4d528
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@df27fae
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@df27fae
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@df27fae
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5579bb86
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5579bb86
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d11346a
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d11346a
DEBUG - Adding type registration string -> org.hibernate.type.StringType@10d59286
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@10d59286
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52525845
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@35a50a4c
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@4ae82894
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ae82894
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@7e9a5fbe
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e9a5fbe
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@17baae6e
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@17baae6e
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48a242ce
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48a242ce
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ad282e0
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ad282e0
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@140e5a13
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@140e5a13
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c9f5c0d
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c9f5c0d
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2df32bf7
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2df32bf7
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7181ae3f
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7181ae3f
DEBUG - Adding type registration date -> org.hibernate.type.DateType@1ee807c6
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ee807c6
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@679b62af
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@679b62af
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@49c43f4e
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49c43f4e
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49c43f4e
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17776a8
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@70beb599
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70beb599
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70beb599
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@33cb5951
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@7fad8c79
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7fad8c79
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@b59d31
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b59d31
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e77a1ed
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e77a1ed
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@4ba2ca36
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ba2ca36
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1445d7f
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1445d7f
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12405818
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@453da22c
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@453da22c
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@453da22c
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1c72da34
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1c72da34
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1c72da34
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@64d7f7e0
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@28c4711c
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@473b46c3
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@473b46c3
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@473b46c3
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77be656f
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77be656f
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77be656f
DEBUG - Adding type registration text -> org.hibernate.type.TextType@78a2da20
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@7bc1a03d
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@77e4c80f
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77e4c80f
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@226a82c4
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@770c2e6b
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@770c2e6b
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@667a738
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@667a738
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ee12bac
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@400cff1a
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@5d47c63f
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@55a1c291
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55a1c291
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@40e6dfe1
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b083826
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@105fece7
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d68ef40
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b0abc94
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Hospital
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Hospital
DEBUG - Bind entity domain.Hospital on table hospital
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=idhospital, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property hospitalId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:hospitalId]
DEBUG - building SimpleValue for hospitalId
DEBUG - Building property hospitalId
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=hospitalAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property hospitalAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:phone]
DEBUG - building SimpleValue for phone
DEBUG - Building property phone
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for hospitalId
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for phone
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@51c8530f
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@51c8530f
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51c8530f
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75881071
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2de8284b
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@12c8a2c0
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@1990a65e
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@1990a65e
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1990a65e
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@544a2ea6
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@544a2ea6
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@544a2ea6
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@704d6e83
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@704d6e83
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@704d6e83
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@706a04ae
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@706a04ae
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@706a04ae
DEBUG - Adding type registration long -> org.hibernate.type.LongType@954b04f
DEBUG - Adding type registration long -> org.hibernate.type.LongType@954b04f
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@954b04f
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@77846d2c
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@77846d2c
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77846d2c
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@24a35978
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@24a35978
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@24a35978
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5204062d
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5204062d
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7a36aefa
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7a36aefa
DEBUG - Adding type registration string -> org.hibernate.type.StringType@fe18270
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@fe18270
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b94d659
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f021e6c
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@543788f3
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@543788f3
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@44a3ec6b
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@44a3ec6b
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@69379752
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69379752
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1e4a7dd4
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1e4a7dd4
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f416310
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f416310
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3439f68d
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3439f68d
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@de3a06f
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@de3a06f
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@530612ba
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@530612ba
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46238e3f
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@46238e3f
DEBUG - Adding type registration date -> org.hibernate.type.DateType@76a4d6c
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@76a4d6c
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@5cdd8682
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cdd8682
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@290dbf45
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@290dbf45
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@290dbf45
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69a10787
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@4e41089d
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e41089d
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e41089d
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@365c30cc
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@71a794e5
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@71a794e5
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@62fdb4a6
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62fdb4a6
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ffcd140
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ffcd140
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@3444d69d
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3444d69d
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a396c1e
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a396c1e
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@314c508a
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@71248c21
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@71248c21
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@71248c21
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b0c2d26
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b0c2d26
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b0c2d26
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@27c6e487
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@59717824
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@516be40f
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@516be40f
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@516be40f
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19dc67c2
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19dc67c2
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19dc67c2
DEBUG - Adding type registration text -> org.hibernate.type.TextType@dd3b207
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@70b0b186
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@35fc6dc4
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fc6dc4
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@731f8236
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@1a052a00
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1a052a00
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@36f0f1be
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@36f0f1be
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@55040f2f
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@275710fc
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@5ea434c8
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@2145433b
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2145433b
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b083826
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@105fece7
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d68ef40
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b0abc94
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75c072cb
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Hospital
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Hospital
DEBUG - Bind entity domain.Hospital on table hospital
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=idhospital, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property hospitalId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:hospitalId]
DEBUG - building SimpleValue for hospitalId
DEBUG - Building property hospitalId
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=hospitalAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property hospitalAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Hospital:phone]
DEBUG - building SimpleValue for phone
DEBUG - Building property phone
DEBUG - Binding entity from annotated class: domain.HospitalAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name HospitalAddress
DEBUG - Bind entity domain.HospitalAddress on table hospital_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.HospitalAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.HospitalAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.HospitalAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(hospital_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.HospitalAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for hospitalId
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for phone
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Forcing column [idblood_bank] to be non-null as it is part of the primary key for table [blood_bank]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [blood_bank_address]
DEBUG - Forcing column [idhospital] to be non-null as it is part of the primary key for table [hospital]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [hospital_address]
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.HospitalAddress
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.HospitalAddress
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): enabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: 2
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5a7fe64f
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: enabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): enabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: AFTER_TRANSACTION
DEBUG - Generate SQL with comments: disabled
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\mysql-connector-java-5.1.45\mysql-connector-java-5.1.45-bin.jar;C:\Program Files\NetBeans 8.2\ide\modules\ext\mysql-connector-java-5.1.23-bin.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\antlr-2.7.7.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\classmate-1.3.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\dom4j-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-core-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jandex-2.0.3.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\javassist-3.22.0-GA.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-logging-3.3.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\geolatte-geom-1.2.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\hibernate-spatial-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\jts-1.13.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\postgresql-42.1.4.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\slf4j-api-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\byte-buddy-1.6.14.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\hibernate-osgi-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\javax.interceptor-api-1.2.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.compendium-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.core-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\jpa-metamodel-generator\hibernate-jpamodelgen-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\envers;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\log4j-1.2.17.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\junit-4.12.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\hamcrest-core-1.3.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, user.country=JM, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=lifeblood.LifeBlood, sun.cpu.endian=little, user.home=C:\Users\howar, user.language=en, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=howar, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\howar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13b3d178, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\nodejs\;C:\Users\howar\Anaconda3;C:\Users\howar\Anaconda3\Library\mingw-w64\bin;C:\Users\howar\Anaconda3\Library\usr\bin;C:\Users\howar\Anaconda3\Library\bin;C:\Users\howar\Anaconda3\Scripts;C:\Users\howar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;C:\Users\howar\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\Nmap;C:\Users\howar\AppData\Roaming\npm;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
DEBUG - Skipping JACC integration as it was not enabled
DEBUG - Instantiated session factory
DEBUG - Not known whether passed class name [domain.Hospital] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Hospital
DEBUG - Not known whether passed class name [domain.Hospital] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Hospital
DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
INFO - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@543c6f6d
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@543c6f6d
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@543c6f6d
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@c81cdd1
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3891771e
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@396e2f39
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@42607a4f
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@42607a4f
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@42607a4f
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@6ec8211c
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@6ec8211c
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ec8211c
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@10dba097
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@10dba097
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10dba097
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@2eda0940
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@2eda0940
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2eda0940
DEBUG - Adding type registration long -> org.hibernate.type.LongType@5c072e3f
DEBUG - Adding type registration long -> org.hibernate.type.LongType@5c072e3f
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c072e3f
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@545997b1
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@545997b1
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@545997b1
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@704921a5
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@704921a5
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@704921a5
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31f924f5
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31f924f5
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fd66ad3
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fd66ad3
DEBUG - Adding type registration string -> org.hibernate.type.StringType@5fdba6f9
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@5fdba6f9
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5123a213
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@281e3708
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@4516af24
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4516af24
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@16022d9d
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@16022d9d
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@43d7741f
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43d7741f
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d7acb34
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d7acb34
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51b279c9
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51b279c9
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@60438a68
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@60438a68
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17695df3
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17695df3
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d8314f0
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d8314f0
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77a57272
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@77a57272
DEBUG - Adding type registration date -> org.hibernate.type.DateType@1efee8e7
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1efee8e7
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@32cf48b7
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@32cf48b7
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@799d4f69
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@799d4f69
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@799d4f69
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12028586
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@11c20519
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11c20519
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11c20519
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@32a068d1
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@282003e1
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@282003e1
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@4df828d7
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4df828d7
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@31206beb
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@31206beb
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@120d6fe6
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@120d6fe6
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@80ec1f8
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@80ec1f8
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6c3f5566
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@16267862
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@16267862
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@16267862
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@49e202ad
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@49e202ad
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@49e202ad
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@6e38921c
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@38364841
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@15d9bc04
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@15d9bc04
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@15d9bc04
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@797badd3
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@797badd3
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@797badd3
DEBUG - Adding type registration text -> org.hibernate.type.TextType@23a5fd2
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@6b1274d2
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@351d0846
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@351d0846
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fe8ea47
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@c540f5a
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c540f5a
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@57d5872c
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57d5872c
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@157632c9
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64c87930
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@67e2d983
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@341b80b2
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@341b80b2
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2890c451
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40e6dfe1
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b083826
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@105fece7
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ec300f1
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@482cd91f
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@123f1134
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d68ef40
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Forcing column [idblood_bank] to be non-null as it is part of the primary key for table [blood_bank]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [blood_bank_address]
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): enabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: 2
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@d2de489
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: enabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): enabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: AFTER_TRANSACTION
DEBUG - Generate SQL with comments: disabled
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\mysql-connector-java-5.1.45\mysql-connector-java-5.1.45-bin.jar;C:\Program Files\NetBeans 8.2\ide\modules\ext\mysql-connector-java-5.1.23-bin.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\antlr-2.7.7.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\classmate-1.3.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\dom4j-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-core-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jandex-2.0.3.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\javassist-3.22.0-GA.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-logging-3.3.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\geolatte-geom-1.2.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\hibernate-spatial-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\jts-1.13.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\postgresql-42.1.4.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\slf4j-api-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\byte-buddy-1.6.14.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\hibernate-osgi-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\javax.interceptor-api-1.2.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.compendium-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.core-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\jpa-metamodel-generator\hibernate-jpamodelgen-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\envers;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\log4j-1.2.17.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\junit-4.12.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\hamcrest-core-1.3.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, user.country=JM, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=lifeblood.LifeBlood, sun.cpu.endian=little, user.home=C:\Users\howar, user.language=en, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=howar, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\howar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@a37aefe, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\nodejs\;C:\Users\howar\Anaconda3;C:\Users\howar\Anaconda3\Library\mingw-w64\bin;C:\Users\howar\Anaconda3\Library\usr\bin;C:\Users\howar\Anaconda3\Library\bin;C:\Users\howar\Anaconda3\Scripts;C:\Users\howar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;C:\Users\howar\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\Nmap;C:\Users\howar\AppData\Roaming\npm;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
DEBUG - Skipping JACC integration as it was not enabled
DEBUG - Instantiated session factory
DEBUG - Not known whether passed class name [domain.BloodBankAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBankAddress
DEBUG - Not known whether passed class name [domain.BloodBankAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBankAddress
DEBUG - Not known whether passed class name [domain.BloodBank] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBank
DEBUG - Not known whether passed class name [domain.BloodBank] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBank
DEBUG - Static SQL for entity: domain.BloodBankAddress
DEBUG -  Version select: select address_id from blood_bank_address where address_id =?
DEBUG -  Snapshot select: select bloodbanka_.address_id, bloodbanka_.address_line_1 as address_2_1_, bloodbanka_.address_line_2 as address_3_1_, bloodbanka_.street as street4_1_ from blood_bank_address bloodbanka_ where bloodbanka_.address_id=?
DEBUG -  Insert 0: insert into blood_bank_address (address_line_1, address_line_2, street, address_id) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank_address set address_line_1=?, address_line_2=?, street=? where address_id=?
DEBUG -  Delete 0: delete from blood_bank_address where address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@691939c9]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [NONE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76012793]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79d94571]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3212a8d7]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_NOWAIT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@495b0487]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_SKIPLOCKED]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@222eb8aa]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [FORCE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1852a3ff]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25bfcafd]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_WRITE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
