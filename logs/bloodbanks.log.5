DEBUG -  Delete 0: delete from blood_bank_address where address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41382722]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [NONE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@425357dd]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@210386e0]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f87a2c]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_NOWAIT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ce1f601]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [UPGRADE_SKIPLOCKED]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e886a5b]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [FORCE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e33c391]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_READ]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31c269fd]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_WRITE]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47747fb9]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [PESSIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213e3629]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7b6f69]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBankAddress)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:0>, path=domain.BloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBankAddress)
          - SQL table alias mapping - bloodbanka0_
          - alias suffix - 0_
          - suffixed key columns - {address_1_1_0_}

DEBUG - Static select for entity domain.BloodBankAddress [OPTIMISTIC_FORCE_INCREMENT]: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBankAddress: select bloodbanka0_.address_id as address_1_1_0_, bloodbanka0_.address_line_1 as address_2_1_0_, bloodbanka0_.address_line_2 as address_3_1_0_, bloodbanka0_.street as street4_1_0_ from blood_bank_address bloodbanka0_ where bloodbanka0_.address_id=?
DEBUG - Static SQL for entity: domain.BloodBank
DEBUG -  Version select: select idblood_bank from blood_bank where idblood_bank =?
DEBUG -  Snapshot select: select bloodbank_.idblood_bank, bloodbank_.address_id as address_4_0_, bloodbank_.name as name2_0_, bloodbank_.phone as phone3_0_ from blood_bank bloodbank_ where bloodbank_.idblood_bank=?
DEBUG -  Insert 0: insert into blood_bank (address_id, name, phone, idblood_bank) values (?, ?, ?, ?)
DEBUG -  Update 0: update blood_bank set address_id=?, name=?, phone=? where idblood_bank=?
DEBUG -  Delete 0: delete from blood_bank where idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70eecdc2]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7db0565c]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [NONE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52eacb4b]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a551a63]
DEBUG - Visiting attribute path : bloodBankAddress.addressLine1
DEBUG - Visiting attribute path : bloodBankAddress.addressLine2
DEBUG - Visiting attribute path : bloodBankAddress.street
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}
          - JOIN (JoinDefinedByMetadata(bloodBankAddress)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=domain.BloodBankAddress)
                - SQL table alias mapping - bloodbanka1_
                - alias suffix - 1_
                - suffixed key columns - {address_1_1_1_}

DEBUG - Static select for entity domain.BloodBank [READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_, bloodbanka1_.address_id as address_1_1_1_, bloodbanka1_.address_line_1 as address_2_1_1_, bloodbanka1_.address_line_2 as address_3_1_1_, bloodbanka1_.street as street4_1_1_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1edb61b1]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc62a3b]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc0bcf6]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32f61a31]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_NOWAIT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5c79a6]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5305c37d]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [UPGRADE_SKIPLOCKED]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a06cbe]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49a64d82]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [FORCE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@344561e0]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36ac8a63]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_READ]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d9d1b69]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251f7d26]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_WRITE]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b21474]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41c07648]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [PESSIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fe8d51b]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22680f52]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d84f61]
DEBUG - Visiting attribute path : bloodBankAddress
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@324dcd31]
DEBUG - Visiting attribute path : name
DEBUG - Visiting attribute path : number
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.BloodBank)
    - Returns
       - EntityReturnImpl(entity=domain.BloodBank, querySpaceUid=<gen:0>, path=domain.BloodBank)
          - EntityAttributeFetchImpl(entity=domain.BloodBankAddress, querySpaceUid=<gen:1>, path=domain.BloodBank.bloodBankAddress)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.BloodBank)
          - SQL table alias mapping - bloodbank0_
          - alias suffix - 0_
          - suffixed key columns - {idblood_1_0_0_}

DEBUG - Static select for entity domain.BloodBank [OPTIMISTIC_FORCE_INCREMENT]: select bloodbank0_.idblood_bank as idblood_1_0_0_, bloodbank0_.address_id as address_4_0_0_, bloodbank0_.name as name2_0_0_, bloodbank0_.phone as phone3_0_0_ from blood_bank bloodbank0_ where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_MERGE on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.BloodBank: select bloodbank0_.idblood_bank as idblood_1_0_1_, bloodbank0_.address_id as address_4_0_1_, bloodbank0_.name as name2_0_1_, bloodbank0_.phone as phone3_0_1_, bloodbanka1_.address_id as address_1_1_0_, bloodbanka1_.address_line_1 as address_2_1_0_, bloodbanka1_.address_line_2 as address_3_1_0_, bloodbanka1_.street as street4_1_0_ from blood_bank bloodbank0_ left outer join blood_bank_address bloodbanka1_ on bloodbank0_.address_id=bloodbanka1_.address_id where bloodbank0_.idblood_bank=?
DEBUG - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
INFO - HHH000412: Hibernate Core {5.2.16.Final}
INFO - HHH000206: hibernate.properties not found
INFO - in the addBloodBank(BloodBank bloodBank) method in services.Hibernate.BloodBankSvcHibernateImpl
DEBUG - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
WARN - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
DEBUG - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
DEBUG - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
DEBUG - Building session factory using internal StandardServiceRegistryBuilder
INFO - HHH80000001: hibernate-spatial integration enabled : true
DEBUG - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG - Overriding existing service binding [org.hibernate.spatial.integration.SpatialService]
DEBUG - Building session factory using provided StandardServiceRegistry
DEBUG - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
INFO - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@710726a3
DEBUG - Adding type registration boolean -> org.hibernate.type.BooleanType@710726a3
DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@710726a3
DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@545997b1
DEBUG - Adding type registration true_false -> org.hibernate.type.TrueFalseType@704921a5
DEBUG - Adding type registration yes_no -> org.hibernate.type.YesNoType@16f7c8c1
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@5579bb86
DEBUG - Adding type registration byte -> org.hibernate.type.ByteType@5579bb86
DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5579bb86
DEBUG - Adding type registration character -> org.hibernate.type.CharacterType@5d11346a
DEBUG - Adding type registration char -> org.hibernate.type.CharacterType@5d11346a
DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d11346a
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@6fb0d3ed
DEBUG - Adding type registration short -> org.hibernate.type.ShortType@6fb0d3ed
DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6fb0d3ed
DEBUG - Adding type registration integer -> org.hibernate.type.IntegerType@24b1d79b
DEBUG - Adding type registration int -> org.hibernate.type.IntegerType@24b1d79b
DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@24b1d79b
DEBUG - Adding type registration long -> org.hibernate.type.LongType@4516af24
DEBUG - Adding type registration long -> org.hibernate.type.LongType@4516af24
DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4516af24
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@768b970c
DEBUG - Adding type registration float -> org.hibernate.type.FloatType@768b970c
DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@768b970c
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@7ba18f1b
DEBUG - Adding type registration double -> org.hibernate.type.DoubleType@7ba18f1b
DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ba18f1b
DEBUG - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@382db087
DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@382db087
DEBUG - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@543e710e
DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@543e710e
DEBUG - Adding type registration string -> org.hibernate.type.StringType@2698dc7
DEBUG - Adding type registration java.lang.String -> org.hibernate.type.StringType@2698dc7
DEBUG - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f71c76a
DEBUG - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4b9e255
DEBUG - Adding type registration url -> org.hibernate.type.UrlType@7f416310
DEBUG - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f416310
DEBUG - Adding type registration Duration -> org.hibernate.type.DurationType@60438a68
DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@60438a68
DEBUG - Adding type registration Instant -> org.hibernate.type.InstantType@6e2c9341
DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6e2c9341
DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1ee807c6
DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1ee807c6
DEBUG - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d6da883
DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d6da883
DEBUG - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@69a10787
DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@69a10787
DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e41089d
DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e41089d
DEBUG - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4148db48
DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4148db48
DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3444d69d
DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3444d69d
DEBUG - Adding type registration date -> org.hibernate.type.DateType@80ec1f8
DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.DateType@80ec1f8
DEBUG - Adding type registration time -> org.hibernate.type.TimeType@314c508a
DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@314c508a
DEBUG - Adding type registration timestamp -> org.hibernate.type.TimestampType@71248c21
DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@71248c21
DEBUG - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@71248c21
DEBUG - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49e202ad
DEBUG - Adding type registration calendar -> org.hibernate.type.CalendarType@6e38921c
DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e38921c
DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e38921c
DEBUG - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@49070868
DEBUG - Adding type registration locale -> org.hibernate.type.LocaleType@146044d7
DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@146044d7
DEBUG - Adding type registration currency -> org.hibernate.type.CurrencyType@3c0a50da
DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c0a50da
DEBUG - Adding type registration timezone -> org.hibernate.type.TimeZoneType@221af3c0
DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@221af3c0
DEBUG - Adding type registration class -> org.hibernate.type.ClassType@551bdc27
DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@551bdc27
DEBUG - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3d36e4cd
DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3d36e4cd
DEBUG - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@525b461a
DEBUG - Adding type registration binary -> org.hibernate.type.BinaryType@3f200884
DEBUG - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f200884
DEBUG - Adding type registration [B -> org.hibernate.type.BinaryType@3f200884
DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@345965f2
DEBUG - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@345965f2
DEBUG - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@345965f2
DEBUG - Adding type registration row_version -> org.hibernate.type.RowVersionType@4450d156
DEBUG - Adding type registration image -> org.hibernate.type.ImageType@7fe8ea47
DEBUG - Adding type registration characters -> org.hibernate.type.CharArrayType@6b53e23f
DEBUG - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b53e23f
DEBUG - Adding type registration [C -> org.hibernate.type.CharArrayType@6b53e23f
DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@491666ad
DEBUG - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@491666ad
DEBUG - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@491666ad
DEBUG - Adding type registration text -> org.hibernate.type.TextType@564718df
DEBUG - Adding type registration ntext -> org.hibernate.type.NTextType@6279cee3
DEBUG - Adding type registration blob -> org.hibernate.type.BlobType@667a738
DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@667a738
DEBUG - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6ee12bac
DEBUG - Adding type registration clob -> org.hibernate.type.ClobType@55a1c291
DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55a1c291
DEBUG - Adding type registration nclob -> org.hibernate.type.NClobType@12d3a4e9
DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12d3a4e9
DEBUG - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2ed0fbae
DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3c87521
DEBUG - Adding type registration serializable -> org.hibernate.type.SerializableType@1d548a08
DEBUG - Adding type registration object -> org.hibernate.type.ObjectType@4b168fa9
DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4b168fa9
DEBUG - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7920ba90
DEBUG - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b419da
DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b2da18f
DEBUG - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5906ebcb
DEBUG - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@258e2e41
DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d299e3
DEBUG - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55a561cf
DEBUG - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b938003
WARN - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
INFO - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull]
INFO - HHH10001001: Connection properties: {user=root, password=toor}
INFO - HHH10001003: Autocommit mode: false
DEBUG - Initializing Connection pool with 1 Connections
INFO - HHH000115: Hibernate connection pool size: 1 (min=1)
DEBUG - Database ->
       name : MySQL
    version : 5.7.21-log
      major : 5
      minor : 7
DEBUG - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.45 ( Revision: 9131eefa398531c7dc98776e8a3fe839e544c5b2 )
      major : 5
      minor : 1
DEBUG - JDBC version : 4.0
INFO - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
DEBUG - Binding entity from annotated class: domain.BloodBank
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBank
DEBUG - Bind entity domain.BloodBank on table blood_bank
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=idblood_bank, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='address_id', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=bloodBankAddress, insertable=true, updatable=true, unique=false}
DEBUG - Building property bloodBankAddress
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property name with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:name]
DEBUG - building SimpleValue for name
DEBUG - Building property name
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property number with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBank:number]
DEBUG - building SimpleValue for number
DEBUG - Building property number
DEBUG - Binding entity from annotated class: domain.BloodBankAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name BloodBankAddress
DEBUG - Bind entity domain.BloodBankAddress on table blood_bank_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(blood_bank_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.BloodBankAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding entity from annotated class: domain.Donor
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Donor
DEBUG - Bind entity domain.Donor on table donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=trn, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property trn with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:trn]
DEBUG - building SimpleValue for trn
DEBUG - Building property trn
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=address, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property address with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:address]
DEBUG - building SimpleValue for address
DEBUG - Building property address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=dob, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property dob with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:dob]
DEBUG - building SimpleValue for dob
DEBUG - Building property dob
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=email, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property email with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:email]
DEBUG - building SimpleValue for email
DEBUG - Building property email
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property firstname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:firstname]
DEBUG - building SimpleValue for firstname
DEBUG - Building property firstname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=gender, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property gender with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:gender]
DEBUG - building SimpleValue for gender
DEBUG - Building property gender
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property lastname with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:lastname]
DEBUG - building SimpleValue for lastname
DEBUG - Building property lastname
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=phone, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:phone]
DEBUG - building SimpleValue for phone
DEBUG - Building property phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor), mappingColumn=blood_type, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property bloodType with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Donor:bloodType]
DEBUG - building SimpleValue for bloodType
DEBUG - Building property bloodType
DEBUG - Binding entity from annotated class: domain.PersonAddress
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name PersonAddress
DEBUG - Bind entity domain.PersonAddress on table donor_address
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=addressId, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressId with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressId]
DEBUG - building SimpleValue for addressId
DEBUG - Building property addressId
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine1]
DEBUG - building SimpleValue for addressLine1
DEBUG - Building property addressLine1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=address_line_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property addressLine2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:addressLine2]
DEBUG - building SimpleValue for addressLine2
DEBUG - Building property addressLine2
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=street, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property street with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.PersonAddress:street]
DEBUG - building SimpleValue for street
DEBUG - Building property street
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_address), mappingColumn=donor, insertable=true, updatable=true, unique=false}
DEBUG - Building property donor
DEBUG - Binding entity from annotated class: domain.Phone
DEBUG - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG - Import with entity name Phone
DEBUG - Bind entity domain.Phone on table donor_phone
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property id with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:id]
DEBUG - building SimpleValue for id
DEBUG - Building property id
DEBUG - Binding column: Ejb3JoinColumn{logicalColumnName='trn', referencedColumn='', mappedBy=''}
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=donor, insertable=true, updatable=true, unique=false}
DEBUG - Building property donor
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_1, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone1 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone1]
DEBUG - building SimpleValue for phone1
DEBUG - Building property phone1
DEBUG - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(donor_phone), mappingColumn=phone_number_2, insertable=true, updatable=true, unique=false}
DEBUG - MetadataSourceProcessor property phone2 with lazy=false
DEBUG - Attempting to locate auto-apply AttributeConverter for property [domain.Phone:phone2]
DEBUG - building SimpleValue for phone2
DEBUG - Building property phone2
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for name
DEBUG - Starting fillSimpleValue for number
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for trn
DEBUG - Starting fillSimpleValue for address
DEBUG - Not known whether passed class name [domain.PersonAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.PersonAddress
DEBUG - Starting fillSimpleValue for dob
DEBUG - Starting fillSimpleValue for email
DEBUG - Starting fillSimpleValue for firstname
DEBUG - Starting fillSimpleValue for gender
DEBUG - Starting fillSimpleValue for lastname
DEBUG - Starting fillSimpleValue for phone
DEBUG - Not known whether passed class name [domain.Phone] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Phone
DEBUG - Starting fillSimpleValue for bloodType
DEBUG - Starting fillSimpleValue for addressId
DEBUG - Starting fillSimpleValue for addressLine1
DEBUG - Starting fillSimpleValue for addressLine2
DEBUG - Starting fillSimpleValue for street
DEBUG - Starting fillSimpleValue for id
DEBUG - Starting fillSimpleValue for phone1
DEBUG - Starting fillSimpleValue for phone2
DEBUG - Forcing column [idblood_bank] to be non-null as it is part of the primary key for table [blood_bank]
DEBUG - Forcing column [address_id] to be non-null as it is part of the primary key for table [blood_bank_address]
DEBUG - Forcing column [trn] to be non-null as it is part of the primary key for table [donor]
DEBUG - Forcing column [addressid] to be non-null as it is part of the primary key for table [donor_address]
DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [donor_phone]
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.Donor
DEBUG - Resolving reference to class: domain.Donor
DEBUG - Resolving reference to class: domain.BloodBankAddress
DEBUG - Resolving reference to class: domain.Donor
DEBUG - Resolving reference to class: domain.Donor
DEBUG - Building session factory
DEBUG - SessionFactory name : null
DEBUG - Automatic flush during beforeCompletion(): enabled
DEBUG - Automatic session close at end of transaction: disabled
DEBUG - Statistics: disabled
DEBUG - Deleted entity synthetic identifier rollback: disabled
DEBUG - Default entity-mode: pojo
DEBUG - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG - Allow initialization of lazy state outside session : disabled
DEBUG - Using BatchFetchStyle : LEGACY
DEBUG - Default batch fetch size: -1
DEBUG - Maximum outer join fetch depth: 2
DEBUG - Default null ordering: NONE
DEBUG - Order SQL updates by primary key: disabled
DEBUG - Order SQL inserts for batching: disabled
DEBUG - multi-tenancy strategy : NONE
DEBUG - JTA Track by Thread: enabled
DEBUG - Query language substitutions: {}
DEBUG - JPA query language strict compliance: disabled
DEBUG - Named query checking : enabled
DEBUG - Second-level cache: enabled
DEBUG - Second-level query cache: disabled
DEBUG - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@18317edc
DEBUG - Second-level cache region prefix: null
DEBUG - Optimize second-level cache for minimal puts: disabled
DEBUG - Structured second-level cache entries: disabled
DEBUG - Second-level cache direct-reference entries: disabled
DEBUG - Automatic eviction of collection cache: disabled
DEBUG - JDBC batch size: 15
DEBUG - JDBC batch updates for versioned data: enabled
DEBUG - Scrollable result sets: enabled
DEBUG - Wrap result sets: disabled
DEBUG - JDBC3 getGeneratedKeys(): enabled
DEBUG - JDBC result set fetch size: null
DEBUG - Connection release mode: AFTER_TRANSACTION
DEBUG - Generate SQL with comments: disabled
DEBUG - Session factory constructed with filter configurations : {}
DEBUG - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQLDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\mysql-connector-java-5.1.45\mysql-connector-java-5.1.45-bin.jar;C:\Program Files\NetBeans 8.2\ide\modules\ext\mysql-connector-java-5.1.23-bin.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\antlr-2.7.7.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\classmate-1.3.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\dom4j-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-core-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jandex-2.0.3.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\javassist-3.22.0-GA.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-logging-3.3.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\required\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\geolatte-geom-1.2.0.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\hibernate-spatial-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\jts-1.13.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\postgresql-42.1.4.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\spatial\slf4j-api-1.6.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\byte-buddy-1.6.14.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\hibernate-osgi-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\javax.interceptor-api-1.2.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.compendium-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\osgi\org.osgi.core-4.3.1.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\jpa-metamodel-generator\hibernate-jpamodelgen-5.2.16.Final.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\hibernate-release-5.2.16.Final\hibernate-release-5.2.16.Final\lib\envers;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\log4j-1.2.17.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\junit-4.12.jar;C:\Program Files\NetBeans 8.2\platform\modules\ext\hamcrest-core-1.3.jar;C:\Program Files\NetBeans 8.2\ide\modules\org-apache-commons-logging.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\cglib-2.2.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-aop-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-aspects-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-beans-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-build-src-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-context-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-context-support-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-core-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-expression-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-framework-bom-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-instrument-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-instrument-tomcat-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-jdbc-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-jms-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-orm-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-oxm-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-struts-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-test-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-tx-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-web-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-webmvc-3.2.7.RELEASE.jar;C:\Program Files\NetBeans 8.2\java\modules\ext\spring-3.0\spring-webmvc-portlet-3.2.7.RELEASE.jar;C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, user.country=JM, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=lifeblood.LifeBlood, sun.cpu.endian=little, user.home=C:\Users\howar, user.language=en, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.NoCacheProvider, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=howar, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/lbds?zeroDateTimeBehavior=convertToNull, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\howar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\howar\Documents\Howard\VTDI\Year 3\Semester 2\Advanced Object Oriented Programming\Demo\LifeBlood, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2609b277, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\xampp\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.8.0_161\bin\;C:\Users\howar\Anaconda3;C:\Users\howar\Anaconda3\Library\mingw-w64\bin;C:\Users\howar\Anaconda3\Library\usr\bin;C:\Users\howar\Anaconda3\Library\bin;C:\Users\howar\Anaconda3\Scripts;C:\Users\howar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;C:\Users\howar\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\Nmap;C:\Users\howar\AppData\Roaming\npm;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=1, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
DEBUG - Skipping JACC integration as it was not enabled
DEBUG - Instantiated session factory
DEBUG - Not known whether passed class name [domain.Phone] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Phone
DEBUG - Not known whether passed class name [domain.Phone] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Phone
DEBUG - Not known whether passed class name [domain.PersonAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.PersonAddress
DEBUG - Not known whether passed class name [domain.PersonAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.PersonAddress
DEBUG - Not known whether passed class name [domain.Donor] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Donor
DEBUG - Not known whether passed class name [domain.Donor] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.Donor
DEBUG - Not known whether passed class name [domain.BloodBankAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBankAddress
DEBUG - Not known whether passed class name [domain.BloodBankAddress] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBankAddress
DEBUG - Not known whether passed class name [domain.BloodBank] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBank
DEBUG - Not known whether passed class name [domain.BloodBank] is safe
DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : domain.BloodBank
DEBUG - Static SQL for entity: domain.Phone
DEBUG -  Version select: select id from donor_phone where id =?
DEBUG -  Snapshot select: select phone_.id, phone_.trn as trn4_4_, phone_.phone_number_1 as phone_nu2_4_, phone_.phone_number_2 as phone_nu3_4_ from donor_phone phone_ where phone_.id=?
DEBUG -  Insert 0: insert into donor_phone (trn, phone_number_1, phone_number_2, id) values (?, ?, ?, ?)
DEBUG -  Update 0: update donor_phone set trn=?, phone_number_1=?, phone_number_2=? where id=?
DEBUG -  Delete 0: delete from donor_phone where id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67304a40]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@906d29b]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [NONE]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542e560f]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dc8caa7]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [READ]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d730606]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b00856b]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [UPGRADE]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3016fd5e]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d102a2]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [UPGRADE_NOWAIT]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c45ee6e]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aac4250]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [UPGRADE_SKIPLOCKED]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1338fb5]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f63e24]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [FORCE]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f05988]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fade1fc]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [PESSIMISTIC_READ]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67c2e933]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613a8ee1]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [PESSIMISTIC_WRITE]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [PESSIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8e8225]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18920cc]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [OPTIMISTIC]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
DEBUG - Visiting attribute path : phone1
DEBUG - Visiting attribute path : phone2
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.Phone)
    - Returns
       - EntityReturnImpl(entity=domain.Phone, querySpaceUid=<gen:0>, path=domain.Phone)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.Phone.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.Phone)
          - SQL table alias mapping - phone0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

DEBUG - Static select for entity domain.Phone [OPTIMISTIC_FORCE_INCREMENT]: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Static select for action ACTION_MERGE on entity domain.Phone: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Static select for action ACTION_REFRESH on entity domain.Phone: select phone0_.id as id1_4_0_, phone0_.trn as trn4_4_0_, phone0_.phone_number_1 as phone_nu2_4_0_, phone0_.phone_number_2 as phone_nu3_4_0_ from donor_phone phone0_ where phone0_.id=?
DEBUG - Static SQL for entity: domain.PersonAddress
DEBUG -  Version select: select addressId from donor_address where addressId =?
DEBUG -  Snapshot select: select personaddr_.addressId, personaddr_.address_line_1 as address_2_3_, personaddr_.address_line_2 as address_3_3_, personaddr_.street as street4_3_, personaddr_.trn as trn5_3_ from donor_address personaddr_ where personaddr_.addressId=?
DEBUG -  Insert 0: insert into donor_address (address_line_1, address_line_2, street, trn, addressId) values (?, ?, ?, ?, ?)
DEBUG -  Update 0: update donor_address set address_line_1=?, address_line_2=?, street=?, trn=? where addressId=?
DEBUG -  Delete 0: delete from donor_address where addressId=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19648c40]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e94def]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [NONE]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3300f4fd]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ab2d48]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [READ]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b068087]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a393455]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [UPGRADE]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a6f2de3]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [UPGRADE_NOWAIT]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49872d67]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b2a01d4]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [UPGRADE_SKIPLOCKED]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f5c518]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f7234e]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [FORCE]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@753432a2]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4983159f]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [PESSIMISTIC_READ]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? lock in share mode
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3a2b2]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c550889]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [PESSIMISTIC_WRITE]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d2bd371]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65fe9e33]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [PESSIMISTIC_FORCE_INCREMENT]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=? for update
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18bc345]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bab2f1]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [OPTIMISTIC]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
DEBUG - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
DEBUG - Visiting attribute path : addressLine1
DEBUG - Visiting attribute path : addressLine2
DEBUG - Visiting attribute path : street
DEBUG - Visiting attribute path : donor
DEBUG - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b53bcc2]
DEBUG - Building LoadPlan...
DEBUG - processing queryspace <gen:0>
DEBUG - LoadPlan(entity=domain.PersonAddress)
    - Returns
       - EntityReturnImpl(entity=domain.PersonAddress, querySpaceUid=<gen:0>, path=domain.PersonAddress)
          - EntityAttributeFetchImpl(entity=domain.Donor, querySpaceUid=<gen:1>, path=domain.PersonAddress.donor)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=domain.PersonAddress)
          - SQL table alias mapping - personaddr0_
          - alias suffix - 0_
          - suffixed key columns - {addressI1_3_0_}

DEBUG - Static select for entity domain.PersonAddress [OPTIMISTIC_FORCE_INCREMENT]: select personaddr0_.addressId as addressI1_3_0_, personaddr0_.address_line_1 as address_2_3_0_, personaddr0_.address_line_2 as address_3_3_0_, personaddr0_.street as street4_3_0_, personaddr0_.trn as trn5_3_0_ from donor_address personaddr0_ where personaddr0_.addressId=?
